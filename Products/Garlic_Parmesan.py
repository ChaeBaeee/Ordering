# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path
import sys
sys.path.append(str(Path(__file__).parent.parent))  # Add parent directory to sys.path
from bestseller import create_bestseller_content  # Import the function
from cart import create_cart_content, add_to_cart, load_items  # Import the functions
from tkinter import messagebox  # Import messagebox

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path("../assets/frame13")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


def clear_window(window):
    for widget in window.winfo_children():
        widget.destroy()


def open_cart(window):
    try:
        print("Opening Cart...")
        clear_window(window)
        from cart import create_cart_content
        create_cart_content(window)
        print("Cart opened successfully.")
    except Exception as e:
        print(f"Failed to open Cart: {e}")


def create_garlic_parmesan_content(window):
    items = load_items()  # Refresh items from database
    garlic_parmesan_price = items["Garlic Parmesan"]["price"]  # Get the price of Garlic Parmesan
    garlic_parmesan_stock = items["Garlic Parmesan"]["stock"]  # Get the stock of Garlic Parmesan
    print("Creating Garlic Parmesan content...")
    for widget in window.winfo_children():
        widget.destroy()  # Clear existing content

    window.geometry("507x782")
    window.configure(bg = "#88D498")

    canvas = Canvas(
        window,
        bg = "#88D498",
        height = 782,
        width = 507,
        bd = 0,
        highlightthickness=0,
        relief = "ridge"
    )

    canvas.place(x = 0, y = 0)
    button_image_1 = PhotoImage(
        file=relative_to_assets("button_1.png"))
    button_1 = Button(
        window,
        image=button_image_1,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: add_to_cart("Garlic Parmesan", quantity),  # Remove popup message
        relief="flat",
        state="disabled" if garlic_parmesan_stock == 0 else "normal",  # Disable if stock is 0
        text="Unavailable" if garlic_parmesan_stock == 0 else ""  # Add "Unavailable" text if stock is 0
    )
    button_1.place(
        x=344.8331298828125,
        y=713.4481201171875,
        width=138.324951171875,
        height=39.13037109375
    )

    button_image_2 = PhotoImage(
        file=relative_to_assets("button_2.png"))
    button_2 = Button(
        window,
        image=button_image_2,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: open_cart(window),  # Change this line
        relief="flat"
    )
    button_2.place(
        x=352.1580810546875,
        y=20.5784912109375,
        width=126.0,
        height=42.0
    )

    canvas.create_rectangle(
        -0.4979572594165802,
        697.3168985782077,
        507.94146728515625,
        697.9183349609375,
        fill="#000000",
        outline="")

    canvas.create_rectangle(
        18.142320811748505,
        322.2071400427121,
        490.920166015625,
        322.7503662109375,
        fill="#000000",
        outline="")

    canvas.create_text(
        42.4671630859375,
        343.1346435546875,
        anchor="nw",
        text="Garlic Parmesan (4pcs)",
        fill="#FFFFFF",
        font=("Abril Fatface", 20 * -1)
    )

    canvas.create_text(
        42.4671630859375,
        417.8768310546875,
        anchor="nw",
        text=f"Php {garlic_parmesan_price}",  # Use the dynamic price
        fill="#FFFFFF",
        font=("Abril Fatface", 20 * -1)
    )


    canvas.create_text(
        35.6724853515625,
        492.6190185546875,
        anchor="nw",
        text="Tender wings drenched in a buttery garlic sauce,\ntopped with Parmesan for a creamy and savory\ntaste.",
        fill="#FFFFFF",
        font=("Abril Fatface", 20 * -1)
    )

    quantity = 1  # Initialize quantity

    def update_quantity_display():
        canvas.itemconfig(quantity_text, text=str(quantity))

    def increment_quantity():
        nonlocal quantity
        quantity += 1
        update_quantity_display()

    def decrement_quantity():
        nonlocal quantity
        if quantity > 1:
            quantity -= 1
            update_quantity_display()

    quantity_text = canvas.create_text(
        108.1580810546875,
        723.5784912109375,
        anchor="nw",
        text=str(quantity),
        fill="#FFFFFF",
        font=("Abril Fatface", 18 * -1)
    )

    button_image_3 = PhotoImage(
        file=relative_to_assets("button_3.png"))
    button_3 = Button(
        window,
        image=button_image_3,
        borderwidth=0,
        highlightthickness=0,
        command=increment_quantity,
        relief="flat"
    )
    button_3.place(
        x=137.593505859375,
        y=725.3389892578125,
        width=27.178970336914062,
        height=27.178970336914062
    )

    button_image_4 = PhotoImage(
        file=relative_to_assets("button_4.png"))
    button_4 = Button(
        window,
        image=button_image_4,
        borderwidth=0,
        highlightthickness=0,
        command=decrement_quantity,
        relief="flat"
    )
    button_4.place(
        x=59.4539794921875,
        y=723.6402587890625,
        width=27.178970336914062,
        height=27.178970336914062
    )

    image_image_1 = PhotoImage(
        file=relative_to_assets("image_1.png"))
    image_1 = canvas.create_image(
        252.1961669921875,
        192.646240234375,
        image=image_image_1
    )

    button_image_5 = PhotoImage(
        file=relative_to_assets("button_5.png"))
    button_5 = Button(
        window,
        image=button_image_5,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: create_bestseller_content(window),  # Go back to bestseller window
        relief="flat"
    )
    button_5.place(
        x=19.1580810546875,
        y=21.5784912109375,
        width=33.0,
        height=29.0
    )

    # Keep a reference to the images to prevent garbage collection
    window.button_images = [button_image_1, button_image_2, button_image_3, button_image_4, button_image_5, image_image_1]

    window.resizable(False, False)
    print("Garlic Parmesan content created successfully.")
