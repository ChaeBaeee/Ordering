# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer

from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage
import json

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path("assets/frame6")

def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)

def clear_window(window):
    for widget in window.winfo_children():
        widget.destroy()

def reset_to_order(window):
    from order import create_main_window_content, reset_order
    reset_order()  # Only reset data, don't close queue window
    clear_window(window)
    create_main_window_content(window)

# Remove reset_order_number function entirely as we don't want to reset order numbers
# def reset_order_number():
#     pass

def create_order_number_content(window, order_number):
    from order import create_queue_system_window, update_queue_display  # Now accessible at module level

    window.geometry("507x782")
    window.configure(bg = "#FFFFFF")

    canvas = Canvas(
        window,
        bg = "#FFFFFF",
        height = 782,
        width = 507,
        bd = 0,
        highlightthickness = 0,
        relief = "ridge"
    )

    canvas.place(x = 0, y = 0)
    canvas.create_text(
        558.1044921875,
        238.78091430664062,
        anchor="nw",
        text="Burger",
        fill="#000000",
        font=("Abril Fatface", 12 * -1)
    )

    canvas.create_text(
        125.0,
        142.0,
        anchor="nw",
        text="Your Number is",
        fill="#000000",
        font=("Abril Fatface", 36 * -1)
    )

    canvas.create_rectangle(
        129.0,
        232.0,
        378.0,
        342.0,  # Add the missing fourth coordinate
        fill="#D9D9D9",
        outline=""
    )

    canvas.create_text(
        249.0,
        272.0,
        anchor="nw",
        text=str(order_number),  # Display the order number
        fill="#000000",
        font=("Abril Fatface", 21 * -1)
    )

    canvas.create_text(
        76.0,
        366.0,
        anchor="nw",
        text="Please proceed to the counter to",
        fill="#1A4524",
        font=("Abril Fatface", 24 * -1)
    )

    canvas.create_text(
        149.0,
        401.0,
        anchor="nw",
        text="claim your receipt.",
        fill="#1A4524",
        font=("Abril Fatface", 24 * -1)
    )

    canvas.create_text(
        120.0,
        505.0,
        anchor="nw",
        text="Thank you!",
        fill="#1A4524",
        font=("Abril Fatface", 48 * -1)
    )

    # Create a function to safely reset the window from the main thread
    def safe_reset():
        if window.winfo_exists():
            reset_to_order(window)  # This will now properly reset everything

    # Update existing queue window if it exists, or create new one
    create_queue_system_window()
    
    # Schedule the window reset using after() instead of threading.Timer
    window.after(10000, safe_reset)  # 10000 ms = 10 seconds

# Remove or comment out unused imports
# import threading
# from collections import deque
# import time
